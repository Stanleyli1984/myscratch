class Solution(object):
    def getSkyline(self, buildings):
        """
        :type buildings: List[List[int]]
        :rtype: List[List[int]]
        """
        points = []
        results = []
        for building in buildings:
            #print building
            point = None
            pre_height = 0
            if results:
                pre_height = results[-1][1]
            b_l, b_r, b_h = building
            for point in reversed(points):
                if b_l <= point[0]:
                    break
                points.pop()
                pre_height = point[1]
                results.append(point)

            if point and b_l == point[0]:
                pre_height = point[1]

            tmp = []
            if b_h > pre_height:
                #results.append([b_l, b_h])
                tmp.append([b_l, b_h])

            for point in reversed(points):
                if point[0] <= b_r:
                    points.pop()
                    if point[0] < b_r:
                        if point[1] < b_h:
                            if pre_height > b_h:
                                tmp.append([point[0], b_h])
                        else:
                            tmp.append(point)
                    pre_height = point[1]
                else:
                    break

            if b_h > pre_height:
                tmp.append([b_r, pre_height])
            points.extend(reversed(tmp))
        for point in reversed(points):
            results.append(point)

        prev = None
        new_results = []
        for result in results:
            if result[1] != prev:
                new_results.append(result)
            prev = result[1]
        return new_results

assert Solution().getSkyline([[1,5,3], [1,5,3], [1,5,3]]) == [[1, 3], [5, 0]]
assert Solution().getSkyline([[0,2,3],[2,5,3]]) == [[0, 3], [5, 0]]
assert Solution().getSkyline([[1,2,1],[1,2,2],[1,2,3]]) == [[1, 3], [2, 0]]
assert Solution().getSkyline([[1,10001,10000],[2,10001,9999],[3,10001,9998],[4,10001,9997],[5,10001,9996], [6,10001,9995], [7,10001,9994]]) == [[1, 10000], [10001, 0]]
assert Solution().getSkyline([[2,9,10], [3,7,15], [5,12,12], [15,20,10], [19,24,8]]) == [[2, 10], [3, 15], [7, 12], [12, 0], [15, 10], [20, 8], [24, 0]]
assert Solution().getSkyline([[1544,231205,376017],[5998,879527,609178],[6145,335251,620022],[8399,852423,441500],[13985,246050,198772],[17311,384461,443954],[19857,545024,924768],[24545,512360,671435],[24637,437312,81524],[34431,410117,572660],[41956,357203,120663],[42582,439404,999964],[45017,495896,997381],[59554,425295,694713],[59749,675665,373880],[64004,876809,401511],[68655,609957,925100],[69029,470794,244859],[72917,320609,664013],[90240,858350,481221],[98512,257365,34944],[98897,617561,110896],[106386,757473,895370],[138505,778541,892102],[142803,482559,915161],[144757,224108,307402],[148962,798847,298420],[153916,608978,659252],[159078,780631,595138],[162335,641684,984370],[169278,520201,615623],[170632,951441,154717],[172091,990955,831470],[177118,614232,815698],[177303,792498,92042],[196888,223796,887790],[200374,903736,16440],[211537,988567,863931],[231437,458146,898771],[239972,855083,850367],[247798,704768,652870],[257551,569479,328756],[261295,627086,545380],[262981,826808,237936],[267002,438552,871785],[271467,592302,176734],[279209,880256,370636],[290082,738236,759585],[308221,553121,306184],[327430,380670,616140],[329228,579494,219292],[335392,940063,872524],[342607,789259,647865],[343982,610053,473003],[351572,710271,234191],[355001,378517,833822],[356988,988350,98517],[373321,727994,205027],[399866,834707,234731],[409207,934136,596974],[412413,593104,628468],[421212,864982,982652],[442333,923180,176317],[442946,801401,799978],[447411,715053,155265],[461090,933427,360992],[471549,665260,955076],[499921,587218,130159],[502274,906023,272847],[505897,821494,809118],[512428,705462,965658],[535788,541703,92423],[555687,960113,583425],[564227,805666,405427],[575074,612835,899325],[629330,797045,84784],[629718,828687,181137],[640143,711963,50666],[643572,832599,301279],[693513,835058,190184],[707821,925059,8606],[720443,971000,127523],[738423,953410,112865],[819134,914252,730415]]) == [[1544, 376017], [5998, 609178], [6145, 620022], [19857, 924768], [42582, 999964], [439404, 997381], [495896, 984370], [641684, 982652], [864982, 872524], [940063, 863931], [988567, 831470], [990955, 0]]